<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd">

	<!-- 注册requestMappingHandlerMapping,requestMappingHandlerAdapter, 使mvc注释@controller提前配置 -->
	<mvc:annotation-driven />

	<!-- 配置扫描包路径选项 -->
	<context:component-scan base-package="com.ly.*.web" />

	<!-- 转向"/"请求到index视图 -->
	<mvc:view-controller path="/" view-name="forward:/yrxd/index" />

	<!-- 静态资源解析 -->
	<mvc:resources location="/resources/" mapping="/resources/**" />

	<!-- 解决@ResponseBody返回字符乱码问题 -->
	<bean class="com.ly.web.base.UTF8StringBeanPostProcessor"/>

	<!-- apache titles -->
	<bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>classpath*:/spring/tiles-config.xml</value>
			</list>
		</property>
		<!-- resolving preparer names as Spring bean definition names -->
		<property name="preparerFactoryClass"
			value="org.springframework.web.servlet.view.tiles3.SimpleSpringPreparerFactory" />
	</bean>

	<bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.tiles3.TilesView" />
	</bean>

	<!-- 解析视图名到对应的文件/WEB-INF/views/*.jsp中 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>
     
	<!-- SpringMVC上传文件时，需要配置MultipartResolver处理器 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 解析request的编码 ，Default is ISO-8859-1 -->
		<property name="defaultEncoding" value="UTF-8" />
		<!-- 设置最大允许的大小(字节)。-1表示没有限制(默认) 1024*1024*10=10MB -->
		<property name="maxUploadSize" value="10485760" />
		<!--被允许的最大的内存的大小，Default is 10240 bytes -->
		<property name="maxInMemorySize" value="10485760" />
		<!-- 一个类似懒加载的属性.可以定义该属性.让解析文件的时候再抛异常,然后Controller中定义异常处理的方法 -->
		<property name="resolveLazily" value="true" />
	</bean>

	<mvc:interceptors> 
		<bean class="com.ly.a.web.tools.LogHandlerInterceptor" />
	</mvc:interceptors>

</beans>